#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
#Область ПрограммныйИнтерфейс
// Проверяет и при необходимости выполняет процедуры по обновлению содержимого справочника
// реализовано не через обновление, чтобы не утяжелять запуск ( на подсистему пока не замахиваемся)
Процедура ПроверитьНеобходимостьОбновления() Экспорт
	Если ЕстьПредопределенныеЭлементыБезТипа() Тогда
		ЗаполнитьТипыУПредопределенных();
	КонецЕсли;
КонецПроцедуры

//Возвращает массив всех элементов графа, включая расширяемые
// Параметры:
//  ЭлементыГрафов - Массив из СправочникСсылка.граф_ТипыЭлементовГрафов 
// Возвращаемое значение:
//	Строка -  текст регистрации типов графов
Функция ТекстРегистрацииРасширяемыхТипов(ЭлементыГрафов) Экспорт
	РасширеннныеТипы = РасширеннныеТипы(ЭлементыГрафов);
	МассивРегистраций = Новый Массив;
	Для каждого Строка из РасширеннныеТипы Цикл
		ШаблонРегистрации = ШаблонРегистрации(Строка.ТипЭлемента);
		Регистрация = СтрШаблон(ШаблонРегистрации, Строка.ТекущийЭлемент,
			Строка.ОписаниеЭлементаJS,
			Строка.РасширяемыйЭлемент);
			Если Не ЗначениеЗаполнено(Строка.ОписаниеЭлементаJS) Тогда
				Регистрация = СтрЗаменить(Регистрация, "options:", "");
			КонецЕсли;
			МассивРегистраций.Добавить(Регистрация);	
	КонецЦикла;
	Результат = СтрСоединить(МассивРегистраций, Символы.ПС);
	Возврат Результат;
КонецФункции


#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Функция ЕстьПредопределенныеЭлементыБезТипа()

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ИСТИНА
	|ИЗ
	|	Справочник.граф_ТипыЭлементовГрафов КАК граф_ТипыЭлементовГрафов
	|ГДЕ
	|	граф_ТипыЭлементовГрафов.Предопределенный 
	|	И граф_ТипыЭлементовГрафов.ТипЭлемента = ЗНАЧЕНИЕ(Перечисление.граф_СоставляющиеГрафа.ПустаяСсылка)";

	Результат = Запрос.Выполнить().Пустой() = Ложь;

	Возврат Результат

КонецФункции

Процедура ЗаполнитьТипыУПредопределенных()
	УстановитьТипЭлемента(Перечисления.граф_СоставляющиеГрафа.Вершина, ПредопределенныеВершины);
	УстановитьТипЭлемента(Перечисления.граф_СоставляющиеГрафа.Контейнер, ПредопределенныеКонтейнеры);
	УстановитьТипЭлемента(Перечисления.граф_СоставляющиеГрафа.Ребро, ПредопределенныеРебра);
КонецПроцедуры

Процедура УстановитьТипЭлемента(Тип, Группа)

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	граф_ТипыЭлементовГрафов.Ссылка
	|ИЗ
	|	Справочник.граф_ТипыЭлементовГрафов КАК граф_ТипыЭлементовГрафов
	|ГДЕ
	|	граф_ТипыЭлементовГрафов.Предопределенный
	|	И граф_ТипыЭлементовГрафов.Ссылка В ИЕРАРХИИ (&Группа)
	|	И граф_ТипыЭлементовГрафов.ЭтоГруппа = ЛОЖЬ";

	Запрос.УстановитьПараметр("Группа", Группа);

	РезультатЗапроса = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СпрОбъект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		СпрОбъект.ТипЭлемента = Тип;
		СпрОбъект.Записать();
	КонецЦикла;

КонецПроцедуры

Функция РасширеннныеТипы(ЭлементыГрафов)
	Запрос = Новый Запрос;

	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВложенныйЗапрос.РасширяемыйЭлемент КАК РасширяемыйЭлемент,
	|	ВложенныйЗапрос.порядок КАК порядок
	|ПОМЕСТИТЬ втЭлементыГрафа
	|ИЗ
	|	(ВЫБРАТЬ
	|		граф_ТипыЭлементовГрафов1.Ссылка КАК РасширяемыйЭлемент,
	|		1 КАК порядок
	|	ИЗ
	|		Справочник.граф_ТипыЭлементовГрафов КАК граф_ТипыЭлементовГрафов1
	|	ГДЕ
	|		граф_ТипыЭлементовГрафов1.Ссылка В (&Ссылка)
	|		И граф_ТипыЭлементовГрафов1.Предопределенный = ЛОЖЬ
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		граф_ТипыЭлементовГрафов1.РасширяемыйЭлемент,
	|		2
	|	ИЗ
	|		Справочник.граф_ТипыЭлементовГрафов КАК граф_ТипыЭлементовГрафов1
	|	ГДЕ
	|		граф_ТипыЭлементовГрафов1.Ссылка В (&Ссылка)
	|		И граф_ТипыЭлементовГрафов1.РасширяемыйЭлемент.Предопределенный = ЛОЖЬ
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		граф_ТипыЭлементовГрафов1.РасширяемыйЭлемент.РасширяемыйЭлемент,
	|		3
	|	ИЗ
	|		Справочник.граф_ТипыЭлементовГрафов КАК граф_ТипыЭлементовГрафов1
	|	ГДЕ
	|		граф_ТипыЭлементовГрафов1.Ссылка В (&Ссылка)
	|		И граф_ТипыЭлементовГрафов1.РасширяемыйЭлемент.РасширяемыйЭлемент.Предопределенный = ЛОЖЬ
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		граф_ТипыЭлементовГрафов1.РасширяемыйЭлемент.РасширяемыйЭлемент.РасширяемыйЭлемент,
	|		4
	|	ИЗ
	|		Справочник.граф_ТипыЭлементовГрафов КАК граф_ТипыЭлементовГрафов1
	|	ГДЕ
	|		граф_ТипыЭлементовГрафов1.Ссылка В (&Ссылка)
	|		И граф_ТипыЭлементовГрафов1.РасширяемыйЭлемент.РасширяемыйЭлемент.РасширяемыйЭлемент.Предопределенный = ЛОЖЬ
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		граф_ТипыЭлементовГрафов1.РасширяемыйЭлемент.РасширяемыйЭлемент.РасширяемыйЭлемент.РасширяемыйЭлемент,
	|		5
	|	ИЗ
	|		Справочник.граф_ТипыЭлементовГрафов КАК граф_ТипыЭлементовГрафов1
	|	ГДЕ
	|		граф_ТипыЭлементовГрафов1.Ссылка В (&Ссылка)
	|		И
	|			граф_ТипыЭлементовГрафов1.РасширяемыйЭлемент.РасширяемыйЭлемент.РасширяемыйЭлемент.РасширяемыйЭлемент.Предопределенный = ЛОЖЬ
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		граф_ТипыЭлементовГрафов1.РасширяемыйЭлемент.РасширяемыйЭлемент.РасширяемыйЭлемент.РасширяемыйЭлемент.РасширяемыйЭлемент,
	|		6
	|	ИЗ
	|		Справочник.граф_ТипыЭлементовГрафов КАК граф_ТипыЭлементовГрафов1
	|	ГДЕ
	|		граф_ТипыЭлементовГрафов1.Ссылка В (&Ссылка)
	|		И
	|			граф_ТипыЭлементовГрафов1.РасширяемыйЭлемент.РасширяемыйЭлемент.РасширяемыйЭлемент.РасширяемыйЭлемент.РасширяемыйЭлемент.Предопределенный = ЛОЖЬ) КАК
	|		ВложенныйЗапрос
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втЭлементыГрафа.РасширяемыйЭлемент.Код КАК ТекущийЭлемент,
	|	втЭлементыГрафа.РасширяемыйЭлемент.ОписаниеЭлементаJS КАК ОписаниеЭлементаJS,
	|	втЭлементыГрафа.РасширяемыйЭлемент.РасширяемыйЭлемент.Код КАК РасширяемыйЭлемент,
	|	втЭлементыГрафа.порядок КАК порядок,
	|	втЭлементыГрафа.РасширяемыйЭлемент.ТипЭлемента КАК ТипЭлемента
	|ИЗ
	|	втЭлементыГрафа КАК втЭлементыГрафа
	|
	|УПОРЯДОЧИТЬ ПО
	|	порядок УБЫВ";
	Запрос.УстановитьПараметр("Ссылка", ЭлементыГрафов);
	Результат = Запрос.Выполнить().Выгрузить();

	Возврат Результат;
КонецФункции

Функция ШаблонРегистрации(ТипЭлемента)
	Если ТипЭлемента = Перечисления.граф_СоставляющиеГрафа.Вершина Тогда
		Результат = "G6.registerNode(
					|""%1"",
					|	{
					|options: %2
					|		  
					|    },
					|""%3""
					|);";
	ИначеЕсли ТипЭлемента = Перечисления.граф_СоставляющиеГрафа.Контейнер Тогда
		Результат = "G6.registerCombo(
					|""%1"",
					|	{
					|options: %2
					|		  
					|    },
					|""%3""
					|);";
	ИначеЕсли ТипЭлемента = Перечисления.граф_СоставляющиеГрафа.Ребро Тогда
		Результат = "G6.registerEdge(
					|""%1"",
					|	{
					|options: %2
					|		  
					|    },
					|""%3""
					|);";
	Иначе
		ВызватьИсключение "Ошибочный тип элемента графа при регистрации";
	КонецЕсли;
	Возврат Результат;
КонецФункции
#КонецОбласти

#КонецЕсли