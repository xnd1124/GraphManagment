#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
#Область ПрограммныйИнтерфейс
// Проверяет и при необходимости выполняет процедуры по обновлению содержимого справочника
// реализовано не через обновление, чтобы не утяжелять запуск ( на подсистему пока не замахиваемся)
Процедура ПроверитьНеобходимостьОбновления() Экспорт
	Если ЕстьПредопределенныеЭлементыБезТипа() Тогда
		ЗаполнитьТипыУПредопределенных();
	КонецЕсли;
КонецПроцедуры

// Возвращает строку для вставки в HTML с описанием типа объекта
// Параметры:
//  ТипОформления - СправочникССылка.граф_ТипыОформленийЭлементовГрафов - элемент для которого нужно получить описание
// Возвращаемое значение:
// Строка - описание объекта
// @skip-check reading-attribute-from-database
Функция ОписаниеТипа(ТипОформления) Экспорт
	Если Не ЗначениеЗаполнено(ТипОформления) Тогда
		Возврат "";
	КонецЕсли;	
	
	ОписаниеДанныхГрафа= Перечисления.граф_КомпонентыГрафа.ОписаниеКомпонентаГрафа(ТипОформления.Компонент);
	Если ЗначениеЗаполнено(ТипОформления.ОписаниеJS) Тогда
		ОписаниеДанныхГрафа = СтрЗаменить(ОписаниеДанныхГрафа, "// регистрация типа элемента", ТипОформления.ОписаниеJS);
	КонецЕсли;
	ОписаниеДанныхГрафа = СтрЗаменить(ОписаниеДанныхГрафа, "//тип объекта", ТипОформления.Код);
	Возврат ОписаниеДанныхГрафа;
КонецФункции


#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Функция ЕстьПредопределенныеЭлементыБезТипа()

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ИСТИНА
	|ИЗ
	|	Справочник.граф_ТипыОформленийЭлементовГрафов КАК граф_ТипыЭлементовГрафов
	|ГДЕ
	|	граф_ТипыЭлементовГрафов.Предопределенный 
	|	И граф_ТипыЭлементовГрафов.Компонент = ЗНАЧЕНИЕ(Перечисление.граф_КомпонентыГрафа.ПустаяСсылка)";

	Результат = Запрос.Выполнить().Пустой() = Ложь;

	Возврат Результат

КонецФункции

Процедура ЗаполнитьТипыУПредопределенных()
	УстановитьТипЭлемента(Перечисления.граф_КомпонентыГрафа.Вершина, ПредопределенныеВершины);
	УстановитьТипЭлемента(Перечисления.граф_КомпонентыГрафа.Контейнер, ПредопределенныеКонтейнеры);
	УстановитьТипЭлемента(Перечисления.граф_КомпонентыГрафа.Ребро, ПредопределенныеРебра);
КонецПроцедуры

Процедура УстановитьТипЭлемента(Тип, Группа)

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	граф_ТипыЭлементовГрафов.Ссылка
	|ИЗ
	|	Справочник.граф_ТипыОформленийЭлементовГрафов КАК граф_ТипыЭлементовГрафов
	|ГДЕ
	|	граф_ТипыЭлементовГрафов.Предопределенный
	|	И граф_ТипыЭлементовГрафов.Ссылка В ИЕРАРХИИ (&Группа)
	|	И граф_ТипыЭлементовГрафов.ЭтоГруппа = ЛОЖЬ";

	Запрос.УстановитьПараметр("Группа", Группа);

	РезультатЗапроса = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СпрОбъект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		СпрОбъект.Компонент = Тип;
		СпрОбъект.Записать();
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#КонецЕсли