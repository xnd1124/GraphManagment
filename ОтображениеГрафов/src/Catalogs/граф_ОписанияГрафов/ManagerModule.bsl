#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
#Область ПрограммныйИнтерфейс
// Узлы в виде дерева.
// 
// Параметры:
//  Ссылка  - СправочникСсылка.граф_ОписанияГрафов
// 
// Возвращаемое значение:
// ДеревоЗначений 
Функция УзлыВВидеДерева(Ссылка) Экспорт
	Результат = ПустоеДеревоУзлов();
	УзлыПоУровням = УзлыПоУровням(Ссылка);
	ДобавленныеСтроки = Новый Соответствие;
	Для Каждого Узел Из УзлыПоУровням Цикл
		Родитель = ДобавленныеСтроки.Получить(Узел.СтрокаРодитель);
		Если Родитель = Неопределено Тогда
			Родитель = Результат;
		КонецЕсли;
		СтрокиУровня = Родитель.Строки;
		НоваяСтрока = СтрокиУровня.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Узел);
		ДобавленныеСтроки.Вставить(Узел.ИдентификаторСтроки, НоваяСтрока);	 
	КонецЦикла;
	Возврат Результат;
КонецФункции
#КонецОбласти


#Область СлужебныеПроцедурыИФункции
Функция УзлыПоУровням(Ссылка)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ссылка", Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	граф_ОписанияГрафовУзлы.ИдентификаторСтроки КАК Потомок,
	|	граф_ОписанияГрафовУзлы.СтрокаРодитель КАК Предок
	|ПОМЕСТИТЬ вТаблица1
	|ИЗ
	|	Справочник.граф_ОписанияГрафов.Узлы КАК граф_ОписанияГрафовУзлы
	|	ГДЕ граф_ОписанияГрафовУзлы.ССылка = &ССЫЛКА
	|	
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	граф_ОписанияГрафовУзлы.ИдентификаторСтроки,
	|	граф_ОписанияГрафовУзлы.ИдентификаторСтроки
	|ИЗ
	|	Справочник.граф_ОписанияГрафов.Узлы КАК граф_ОписанияГрафовУзлы
	|	ГДЕ граф_ОписанияГрафовУзлы.ССылка = &ССЫЛКА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Связь1.Предок КАК Предок,
	|	Связь2.Потомок КАК Потомок
	|ПОМЕСТИТЬ вТаблица2
	|ИЗ
	|	вТаблица1 КАК Связь1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ вТаблица1 КАК Связь2
	|		ПО Связь1.Потомок = Связь2.Предок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Связь1.Предок КАК Предок,
	|	Связь2.Потомок КАК Потомок
	|ПОМЕСТИТЬ вТаблица3
	|ИЗ
	|	вТаблица2 КАК Связь1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ вТаблица2 КАК Связь2
	|		ПО Связь1.Потомок = Связь2.Предок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Связь1.Предок КАК Предок,
	|	Связь2.Потомок КАК Потомок
	|ПОМЕСТИТЬ вТаблица4
	|ИЗ
	|	вТаблица3 КАК Связь1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ вТаблица3 КАК Связь2
	|		ПО Связь1.Потомок = Связь2.Предок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Связь1.Предок) КАК Уровень,
	|	Связь2.Потомок КАК Потомок
	|ПОМЕСТИТЬ втУровни
	|ИЗ
	|	вТаблица4 КАК Связь1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ вТаблица4 КАК Связь2
	|		ПО Связь1.Потомок = Связь2.Предок
	|ГДЕ
	|	Связь1.Предок <> Связь2.Потомок
	|
	|СГРУППИРОВАТЬ ПО
	|	Связь2.Потомок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	граф_ОписанияГрафовУзлы.Ссылка КАК Ссылка,
	|	граф_ОписанияГрафовУзлы.НомерСтроки КАК НомерСтроки,
	|	граф_ОписанияГрафовУзлы.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	граф_ОписанияГрафовУзлы.ИдентификаторУзла КАК ИдентификаторУзла,
	|	граф_ОписанияГрафовУзлы.Оформление КАК Оформление,
	|	граф_ОписанияГрафовУзлы.СвойстваУзла КАК СвойстваУзла,
	|	граф_ОписанияГрафовУзлы.СтрокаРодитель КАК СтрокаРодитель
	|ИЗ
	|	втУровни КАК втУровни
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.граф_ОписанияГрафов.Узлы КАК граф_ОписанияГрафовУзлы
	|		ПО втУровни.Потомок = граф_ОписанияГрафовУзлы.ИдентификаторСтроки
	|		и  граф_ОписанияГрафовУзлы.ССылка = &ССЫЛКА
	|
	|УПОРЯДОЧИТЬ ПО
	|	втУровни.Уровень";
	Результат = Запрос.Выполнить().Выгрузить();

	Возврат Результат;
КонецФункции

Функция ПустоеДеревоУзлов()
	МетаданныеУзлы = Метаданные.Справочники.граф_ОписанияГрафов.ТабличныеЧасти.Узлы;
	Результат = Новый ДеревоЗначений;
	Для Каждого Реквизит Из МетаданныеУзлы.Реквизиты Цикл
		Если Реквизит.Имя = "СтрокаРодитель" Тогда 
		 Продолжить;
		КонецЕсли;
		Результат.Колонки.Добавить(Реквизит.Имя, Реквизит.Тип);	
	КонецЦикла;
	Возврат Результат;
КонецФункции

#КонецОбласти

#КонецЕсли

