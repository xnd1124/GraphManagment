#Область ПрограммныйИнтерфейс
// Возвращает текст внутри самых первых скобок {} 
// 
// Параметры:
//  Текст - Строка - JSON строка
// 
// Возвращаемое значение:
//  Строка - Содержимое внутри скобок
Функция СодержимоеВнутриСкобок(Текст) Экспорт
	ПозицияПервойСкобки = СтрНайти(Текст, "{", , , 1);
	ПозицияПоследнейСкобки = СтрНайти(Текст, "}", НаправлениеПоиска.СКонца, , 1);
	Если ПозицияПервойСкобки = 0 Или ПозицияПоследнейСкобки = 0 Тогда
		Возврат Текст;
	Иначе
		Если ДоПервойСкобкиЕстьЗначащиеСимволы(Текст, ПозицияПервойСкобки) Тогда
			Возврат Текст;
		КонецЕсли;
		Результат = Сред(Текст, ПозицияПервойСкобки + 1, ПозицияПоследнейСкобки - ПозицияПервойСкобки - 1);
	КонецЕсли;
	Возврат СокрЛП(Результат);
КонецФункции


// Помещает текст в скобки {} и возвращает полученую строку 
// 
// Параметры:
//  Текст - Строка - JSON строка
// 
// Возвращаемое значение:
//  Строка - текст добавленный в скобои
Функция ТекстСоСкобками(Текст) Экспорт
	ШаблонТекста = "{
	|%1
	|}";
	Возврат СтрШаблон(ШаблонТекста, Текст);
КонецФункции
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Функция ДоПервойСкобкиЕстьЗначащиеСимволы(Текст, ПозицияПервойСкобки)
	Для Счетчик = 1 по ПозицияПервойСкобки Цикл
		Символ = Сред(текст, Счетчик, 1);
		КодСимвола = КодСимвола(Символ);
		Если СтроковыеФункцииКлиентСервер.ЭтоРазделительСлов(КодСимвола) = Ложь Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	Возврат Ложь;
КонецФункции
#КонецОбласти
